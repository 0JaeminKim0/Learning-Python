## 30 - 01 - 2019 ##

##      DAY 1     ##


## How to make function in python.

def double(x):
    return x * 2

def apply_to_one(f):
    return f(1)

def my_print(message="My default message"):
    print message
    
def substract(a, b):
    print a - b

# Declare the function
my_double = double

x = apply_to_one(my_double)

# As using lamda, I can assign variable x 
# and get a return value as well.
y = apply_to_one(lambda x: x + 4)

print x, y
#my_print()
#my_print("Hello")
#substract(5, 10)

#As using lamda, let me make a substraction instead of function
print (lambda a,b: a - b)(10, 20)

##Show how to quote the string

single_quoted_string = 'data science'
double_quoted_string = "data science"

tab_string = "\t"
#print len(tab_string)

## Exception ( try and except )
# The case for zerodivisionerror
try:
    print 0/0
except ZeroDivisionError:
    print "cannot divide by zero"
    
### Make a variable cases of list

## Play with lists
integer_list = [1,2,3]
heterogeneous_list = ["string", 0.1, True]
list_of_list = [integer_list, heterogeneous_list, [], 234]

#print list_of_list

## Get & Set nth element of a list
x = range(10)
zero = x[0]
# When the element is negative, it indicates from end
nine = x[-1]
eight = x[-2]
# can set a part in a list through initialising the value
x[0] = -22
#print x

## slice the list
first_three = x[:3]
#print first_three
three_to_end = x[3:]
#print three_to_end
one_to_four = x[1:5]
#print one_to_four
last_three = x[-3:]
#print last_three
without_one_and_last = x[1:-1]
#print without_one_and_last
copy_of_x = x[:]
#print copy_of_x

## Extending the list
x.extend([99, 999, 9999])
print x, len(x)

